(()=>{var e={750:e=>{class t{constructor(){this.sampleRate=.1,this.importantEvents=new Set(["click","scroll","hover","focus"]),this.contextWindow=5e3,this.events=[],this.engagementMetrics={scrollDepth:0,dwellTime:0,interactionCount:0,lastInteraction:Date.now()}}shouldTrack(e,t){return!!this.importantEvents.has(e)||(this.isHighEngagementContext(t)?Math.random()<2*this.sampleRate:Math.random()<this.sampleRate)}isHighEngagementContext(e){return e.scrollDepth>.7||e.dwellTime>1e4||e.interactionCount>5}trackEvent(e,t){this.shouldTrack(e.type,t)&&(this.events.push({...e,context:t,timestamp:Date.now()}),this.updateEngagementMetrics(e,t),this.events.length>=50&&this.processBatch())}updateEngagementMetrics(e,t){this.engagementMetrics.lastInteraction=Date.now(),this.engagementMetrics.interactionCount++,"scroll"===e.type&&(this.engagementMetrics.scrollDepth=Math.max(this.engagementMetrics.scrollDepth,t.scrollDepth||0))}async processBatch(){const e=[...this.events];this.events=[],await chrome.runtime.sendMessage({action:"process-behavior-batch",events:e})}}class s{constructor(){this.quality=.8,this.maxSize=1048576,this.maxDimension=1920}async optimizeScreenshot(e){const t=document.createElement("canvas"),s=t.getContext("2d"),n=new Image;return new Promise(o=>{n.onload=()=>{const{width:e,height:a}=this.calculateOptimalSize(n.width,n.height);t.width=e,t.height=a,s.drawImage(n,0,0,e,a);let i=t.toDataURL("image/jpeg",this.quality);for(;this.getDataUrlSize(i)>this.maxSize&&this.quality>.3;)this.quality-=.1,i=t.toDataURL("image/jpeg",this.quality);o(i)},n.src=e})}calculateOptimalSize(e,t){const s=Math.min(this.maxDimension/e,this.maxDimension/t);return{width:Math.round(e*s),height:Math.round(t*s)}}getDataUrlSize(e){return Math.ceil(3*e.length/4)}}class n{constructor(){this.processedElements=new WeakSet,this.processedSources=new Set,this.enabled=!0,this.intelligentTracker=new t,this.screenshotOptimizer=new s,this.setupMutationObserver(),this.setupMessageListener(),this.setupEventCapture(),this.setupBehaviorTracking(),this.initializeState(),this.scanImagesForSidebar()}async initializeState(){const e=await chrome.storage.local.get(["enabled"]);this.enabled=!1!==e.enabled,this.enabled&&this.scanImagesForSidebar()}setupBehaviorTracking(){let e;document.addEventListener("scroll",t=>{clearTimeout(e),e=setTimeout(()=>{const e=(window.scrollY+window.innerHeight)/document.documentElement.scrollHeight;this.intelligentTracker.trackEvent(t,{scrollDepth:e})},100)},{passive:!0}),["click","hover","focus"].forEach(e=>{document.addEventListener(e,e=>{const t={scrollDepth:(window.scrollY+window.innerHeight)/document.documentElement.scrollHeight,dwellTime:Date.now()-this.intelligentTracker.engagementMetrics.lastInteraction,interactionCount:this.intelligentTracker.engagementMetrics.interactionCount};this.intelligentTracker.trackEvent(e,t)},{passive:!0})})}removeAllButtons(){document.querySelectorAll(".download-btn").forEach(e=>e.remove())}setupEventCapture(){document.addEventListener("contextmenu",e=>{e.target.closest(".download-btn")&&e.stopPropagation()},!0),document.addEventListener("mouseup",e=>{const t=e.target.closest("canvas");t&&!this.processedElements.has(t)&&this.processCanvas(t)},!0)}setupMessageListener(){chrome.runtime.onMessage.addListener(e=>{"scanImagesForSidebar"===e.type?this.scanImagesForSidebar():"toggleExtension"===e.type?(this.enabled=e.enabled,this.enabled&&this.scanImagesForSidebar()):"captureScreenshot"===e.type&&this.captureOptimizedScreenshot()})}async captureOptimizedScreenshot(){try{const e=performance.now(),t=await chrome.runtime.sendMessage({type:"captureScreenshot"});if(t.dataUrl){const s=await this.screenshotOptimizer.optimizeScreenshot(t.dataUrl),n=performance.now()-e;console.log(`[Kai] Screenshot captured and optimized in ${n.toFixed(2)}ms`),await this.processScreenshot(s)}}catch(e){console.error("[Kai] Screenshot capture failed:",e)}}async processScreenshot(e){const t={dataUrl:e,timestamp:Date.now(),url:window.location.href,title:document.title,engagement:this.intelligentTracker.engagementMetrics};await chrome.storage.local.set({[`screenshot_${Date.now()}`]:t}),console.log("[Kai] Screenshot processed and stored")}async deepScanElement(e){if(!e)return;await this.processElement(e);const t=e.querySelectorAll("*");for(const e of t)await this.processElement(e);e.shadowRoot&&await this.deepScanElement(e.shadowRoot)}processComments(e){const t=document.createNodeIterator(e,NodeFilter.SHOW_COMMENT,null,!1);let s;for(;s=t.nextNode();){const e=s.textContent.match(/(https?:\/\/[^\s]+\.(?:jpg|jpeg|png|gif|webp|svg|avif))/gi);e&&e.forEach(e=>{this.processedSources.has(e)||this.processedSources.add(e)})}}async scanAllImages(){console.log("[Kai] Starting intelligent image scan..."),this.processedElements=new WeakSet,this.processedSources=new Set,this.removeAllButtons(),await this.deepScanElement(document.documentElement),this.processComments(document.documentElement);const e=document.getElementsByTagName("iframe");for(const t of e)try{const e=t.contentDocument||t.contentWindow.document;await this.deepScanElement(e.documentElement),this.processComments(e.documentElement)}catch(e){console.warn("[Kai] Cannot access iframe content:",e)}const t=document.getElementsByTagName("style");for(const e of t){const t=e.textContent.match(/url\("?(.*?\.(?:jpg|jpeg|png|gif|webp|svg|avif))["']?\)/gi);t&&t.forEach(e=>{const t=e.slice(4,-1).replace(/["']/g,"");this.processedSources.has(t)||this.processedSources.add(t)})}console.log("[Kai] Intelligent image scan completed.")}async processElement(e){if(this.processedElements.has(e))return;this.processedElements.add(e);const t=ImageUtils.getAllPossibleSources(e);for(const e of t)this.processedSources.has(e)||this.processedSources.add(e)}processCanvas(e){const t=ImageUtils.getCanvasImage(e);t&&this.screenshotOptimizer.optimizeScreenshot(t).then(e=>{console.log("[Kai] Canvas image optimized")}).catch(e=>{console.error("[Kai] Canvas optimization failed:",e)})}async scanImagesForSidebar(){if(!this.enabled)return;console.log("[Kai] Starting enhanced image scan for sidebar..."),chrome.runtime.sendMessage({type:"clearImages"});const e=async(e,t)=>{try{if(!t||!ImageUtils.isPossibleImageSource(t))return;if(this.processedSources.has(t))return;this.processedSources.add(t);let s="Unknown";e instanceof HTMLImageElement&&e.complete?s=`${e.naturalWidth}x${e.naturalHeight}`:e instanceof HTMLCanvasElement&&(s=`${e.width}x${e.height}`);const n={url:t,filename:ImageUtils.generateFileName(t),dimensions:s,element:e,timestamp:Date.now(),engagement:this.intelligentTracker.engagementMetrics};chrome.runtime.sendMessage({type:"newImage",data:n})}catch(e){console.error("[Kai] Error processing image for sidebar:",e)}};this.processedSources=new Set;const t=document.getElementsByTagName("img");for(const s of t)if(ImageUtils.isValidImage(s)&&(await e(s,s.src),s.srcset)){const t=s.srcset.split(",").map(e=>e.trim().split(" ")[0]);for(const n of t)await e(s,n)}const s=document.getElementsByTagName("canvas");for(const e of s)this.processedElements.has(e)||(this.processCanvas(e),this.processedElements.add(e));const n=document.querySelectorAll("*");for(const e of n)this.processBackgroundImage(e);const o=document.querySelectorAll("svg");for(const e of o)this.processSVG(e);this.findBase64Images(document.documentElement),chrome.runtime.sendMessage({type:"scanComplete"}),console.log("[Kai] Enhanced sidebar scan completed.")}processSVG(e){const t=(new XMLSerializer).serializeToString(e),s=new Blob([t],{type:"image/svg+xml;charset=utf-8"});URL.createObjectURL(s),this.intelligentTracker.trackEvent({type:"svg-processed"},{elementType:"svg",size:t.length})}processBackgroundImage(e){(window.getComputedStyle(e).backgroundImage.match(/url\("?(.*?\.(?:jpg|jpeg|png|gif|webp|svg|avif))["']?\)/g)||[]).forEach(e=>{const t=e.slice(4,-1).replace(/["']/g,"");this.processedSources.has(t)||this.processedSources.add(t)})}findBase64Images(e){const t=(e.textContent||"").match(/data:image\/[^;]+;base64,[A-Za-z0-9+/=]+/g);t&&t.forEach(e=>{this.processedSources.has(e)||this.processedSources.add(e)})}setupMutationObserver(){new MutationObserver(e=>{let t=!1;e.forEach(e=>{"childList"===e.type&&e.addedNodes.forEach(e=>{e.nodeType===Node.ELEMENT_NODE&&("IMG"===e.tagName||e.querySelector("img"))&&(t=!0)})}),t&&this.enabled&&(clearTimeout(this.rescanTimeout),this.rescanTimeout=setTimeout(()=>{this.scanImagesForSidebar()},1e3))}).observe(document.body,{childList:!0,subtree:!0})}}new n,e.exports&&(e.exports={ContextSnapDownloader:n,IntelligentTracker:t,ScreenshotOptimizer:s})}},t={};!function s(n){var o=t[n];if(void 0!==o)return o.exports;var a=t[n]={exports:{}};return e[n](a,a.exports,s),a.exports}(750)})();
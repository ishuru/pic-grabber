(()=>{var e={83:e=>{const r=new Map,t=new Set,a={screenshot:{count:0,avgTime:0,errors:0},api:{count:0,avgTime:0,errors:0},memory:{current:0,peak:0,avg:0},cpu:{current:0,peak:0,avg:0}};Date.now();class o{constructor(){this.metrics=new Map,this.thresholds={memory:52428800,cpu:.8,response:2e3}}async optimizeScreenshot(e){const r=document.createElement("canvas"),t=r.getContext("2d"),a=new Image;return new Promise(o=>{a.onload=()=>{const{width:e,height:s}=this.calculateOptimalSize(a.width,a.height,1920);r.width=e,r.height=s,t.drawImage(a,0,0,e,s),o(r.toDataURL("image/jpeg",.8))},a.src=e})}calculateOptimalSize(e,r,t=1920){const a=Math.min(t/e,t/r);return{width:Math.round(e*a),height:Math.round(r*a)}}}class s{constructor(){this.sensitiveFields=["password","credit_card","ssn","token"],this.dataRetentionDays=30}sanitizeData(e){const r={...e};return this.sensitiveFields.forEach(e=>{r[e]&&delete r[e]}),r}async cleanupOldData(){const e=Date.now()-24*this.dataRetentionDays*60*60*1e3,r=await chrome.storage.local.get(null),t=Object.entries(r).filter(([r,t])=>t.timestamp&&t.timestamp<e).map(([e])=>e);t.length>0&&await chrome.storage.local.remove(t)}}class n{constructor(){this.errorCount=0,this.maxErrors=10,this.errorWindow=6e4,this.circuitBreaker=new Map}handleError(e,r){const t=Date.now();Math.floor(t/this.errorWindow),this.errorCount++,this.errorCount>=this.maxErrors&&(this.circuitBreaker.set(r,t+3e5),this.disableFeature(r)),this.logError(e,r,t)}async logError(e,r,t){console.error(`[Kai Error] ${r}:`,e),await chrome.runtime.sendMessage({action:"log-error",error:e.message,context:r,timestamp:t,stack:e.stack})}disableFeature(e){console.warn(`[Kai] Feature disabled due to errors: ${e}`)}}class i{constructor(){this.browser=this.detectBrowser(),this.api=this.getUnifiedAPI()}detectBrowser(){const e=navigator.userAgent;return e.includes("Chrome")?"chrome":e.includes("Edge")?"edge":e.includes("Brave")?"brave":"chrome"}getUnifiedAPI(){return{tabs:chrome.tabs||browser.tabs,storage:chrome.storage||browser.storage,runtime:chrome.runtime||browser.runtime,scripting:chrome.scripting||browser.scripting}}}const c=new o,m=new s,h=new n;new i,chrome.alarms.create("keep-alive",{delayInMinutes:1,periodInMinutes:1}),chrome.alarms.onAlarm.addListener(e=>{"keep-alive"===e.name&&console.log("[Kai] Service worker keep-alive tick")}),chrome.runtime.onInstalled.addListener(()=>{console.log("[Kai] ContextSnap Extension v1.0.0 initialized"),chrome.sidePanel.setPanelBehavior({openPanelOnActionClick:!0}).catch(e=>{h.handleError(e,"sidePanel-config")}),a.startTime=Date.now()}),chrome.action.onClicked.addListener(async e=>{try{const r=performance.now();await chrome.sidePanel.open({tabId:e.id}),chrome.tabs.sendMessage(e.id,{type:"scanImagesForSidebar"});const t=performance.now()-r;a.api.count++,a.api.avgTime=(a.api.avgTime+t)/2}catch(e){h.handleError(e,"action-click"),a.api.errors++}}),chrome.runtime.onConnect.addListener(e=>{"sidebar"===e.name&&(t.add(e),r.size>0&&e.postMessage({type:"initialImages",images:Array.from(r.values())}),e.onDisconnect.addListener(()=>{t.delete(e)}),chrome.tabs.query({active:!0,currentWindow:!0},e=>{e[0]&&chrome.tabs.sendMessage(e[0].id,{type:"scanImagesForSidebar"})}))}),chrome.runtime.onMessage.addListener((e,o,s)=>{const n=performance.now();try{if("fetchImage"===e.type)return fetch(e.url,{headers:{Accept:"image/webp,image/apng,image/*,*/*","Content-Type":e.mimeType||"image/webp"}}).then(e=>e.blob()).then(r=>{const t=new Blob([r],{type:e.mimeType||r.type});s({blob:t});const o=performance.now()-n;a.api.count++,a.api.avgTime=(a.api.avgTime+o)/2}).catch(e=>{h.handleError(e,"fetch-image"),a.api.errors++,s({error:e.message})}),!0;if("clearImages"===e.type){r.clear();for(const e of t)e.postMessage({type:"clearImages"})}else if("newImage"===e.type){const a=m.sanitizeData(e.data);if(!r.has(a.url)){r.set(a.url,a);for(const e of t)e.postMessage({type:"newImage",data:a})}}else if("scanComplete"===e.type)for(const e of t)e.postMessage({type:"scanComplete"});else{if("captureScreenshot"===e.type)return chrome.tabs.captureVisibleTab(null,{format:"png"},async e=>{try{const r=await c.optimizeScreenshot(e);s({dataUrl:r});const t=performance.now()-n;a.screenshot.count++,a.screenshot.avgTime=(a.screenshot.avgTime+t)/2}catch(e){h.handleError(e,"screenshot-capture"),a.screenshot.errors++,s({error:e.message})}}),!0;"getMetrics"===e.type&&s({metrics:a,uptime:Date.now()-n,timestamp:(new Date).toISOString()})}}catch(e){h.handleError(e,"message-handler")}}),setInterval(async()=>{try{await m.cleanupOldData(),performance.memory&&(a.memory.current=performance.memory.usedJSHeapSize,a.memory.peak=Math.max(a.memory.peak,performance.memory.usedJSHeapSize),a.memory.avg=(a.memory.avg+performance.memory.usedJSHeapSize)/2)}catch(e){h.handleError(e,"maintenance")}},3e5),e.exports&&(e.exports={PerformanceOptimizer:o,SecurityManager:s,ErrorHandler:n,BrowserAPI:i})}},r={};!function t(a){var o=r[a];if(void 0!==o)return o.exports;var s=r[a]={exports:{}};return e[a](s,s.exports,t),s.exports}(83)})();
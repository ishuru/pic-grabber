(()=>{class e{constructor(){this.images=new Map,this.port=null,this.currentFilter="all",this.currentSort="name",this.initializeElements(),this.setupEventListeners(),this.setupPortConnection()}initializeElements(){this.imagesContainer=document.getElementById("imagesContainer"),this.searchInput=document.getElementById("searchImages"),this.refreshButton=document.getElementById("refreshImages"),this.downloadAllButton=document.getElementById("downloadAll"),this.closeButton=document.getElementById("closeSidebar"),this.sortBySelect=document.getElementById("sortBy"),this.filterChips=document.querySelectorAll(".filter-chip")}setupEventListeners(){this.searchInput.addEventListener("input",()=>this.filterImages()),this.refreshButton.addEventListener("click",()=>this.requestImageScan()),this.downloadAllButton.addEventListener("click",()=>this.downloadAllImages()),this.closeButton.addEventListener("click",()=>window.close()),this.filterChips.forEach(e=>{e.addEventListener("click",()=>{this.filterChips.forEach(e=>e.classList.remove("active")),e.classList.add("active"),this.currentFilter=e.dataset.type,this.filterAndSortImages()})}),this.sortBySelect.addEventListener("change",()=>{this.currentSort=this.sortBySelect.value,this.filterAndSortImages()}),document.addEventListener("keydown",e=>{"Escape"===e.key?window.close():"f"===e.key&&(e.ctrlKey||e.metaKey)&&(e.preventDefault(),this.searchInput.focus())})}setupPortConnection(){this.port=chrome.runtime.connect({name:"sidebar"}),this.port.onMessage.addListener(e=>{"initialImages"===e.type?e.images.forEach(e=>this.addImage(e)):"newImage"===e.type?this.addImage(e.data):"clearImages"===e.type?this.clearImages():"scanComplete"===e.type&&this.updateLoadingState(!1)}),this.requestImageScan()}requestImageScan(){this.clearImages(),this.updateLoadingState(!0),chrome.tabs.query({active:!0,currentWindow:!0},e=>{const t=e[0];t?chrome.tabs.sendMessage(t.id,{type:"scanImagesForSidebar"},e=>{if(chrome.runtime.lastError){console.error("Error sending message:",chrome.runtime.lastError),this.updateLoadingState(!1);const e=this.imagesContainer.querySelector(".loading-message");e&&(e.textContent="Failed to scan images. Please try again.",e.className="no-images")}}):(console.error("No active tab found"),this.updateLoadingState(!1))})}clearImages(){this.images.clear(),this.imagesContainer.innerHTML='<div class="loading-message">Scanning for images...</div>'}updateLoadingState(e){const t=this.imagesContainer.querySelector(".loading-message");t&&(e||(0===this.images.size?(t.textContent="No images found on this page",t.className="no-images"):t.remove()))}addImage(e){if(this.images.has(e.url))return;this.images.set(e.url,e);const t=this.imagesContainer.querySelector(".loading-message");t&&t.remove();const s=document.createElement("div");s.className="image-item",s.dataset.type=this.getImageType(e.filename),s.innerHTML=`\n            <img src="${e.url}" class="image-preview" alt="Preview">\n            <div class="image-info">\n                <h3 class="image-filename">${e.filename}</h3>\n                <p class="image-dimensions">${e.dimensions}</p>\n            </div>\n            <button class="download-button" data-url="${e.url}">\n                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">\n                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>\n                    <polyline points="7 10 12 15 17 10"/>\n                    <line x1="12" y1="15" x2="12" y2="3"/>\n                </svg>\n                Download\n            </button>\n        `,s.querySelector(".download-button").addEventListener("click",()=>this.downloadImage(e)),this.imagesContainer.appendChild(s),this.filterAndSortImages()}getImageType(e){const t=e.split(".").pop().toLowerCase();return["jpg","jpeg","png","gif","svg","webp","avif"].includes(t)?t:"other"}filterAndSortImages(){const e=this.searchInput.value.toLowerCase(),t=Array.from(this.imagesContainer.getElementsByClassName("image-item"));t.forEach(t=>{const s=t.querySelector(".image-filename").textContent.toLowerCase(),{type:a}=t.dataset,n=s.includes(e),i="all"===this.currentFilter||"jpg"===this.currentFilter&&("jpg"===a||"jpeg"===a)||a===this.currentFilter;t.style.display=n&&i?"":"none"}),t.filter(e=>"none"!==e.style.display).sort((e,t)=>{const s=e.querySelector(".image-filename").textContent,a=t.querySelector(".image-filename").textContent,n=e.dataset.type,i=t.dataset.type,o=e.querySelector(".image-dimensions").textContent,r=t.querySelector(".image-dimensions").textContent;switch(this.currentSort){case"name":return s.localeCompare(a);case"type":return n.localeCompare(i)||s.localeCompare(a);case"size":const[e]=o.split("x").map(Number),[t]=r.split("x").map(Number);return(t||0)-(e||0);default:return 0}}).forEach(e=>this.imagesContainer.appendChild(e))}filterImages(){const e=this.searchInput.value.toLowerCase(),t=this.imagesContainer.getElementsByClassName("image-item");for(const s of t){const t=s.querySelector(".image-filename").textContent.toLowerCase();s.style.display=t.includes(e)?"":"none"}}async downloadImage(e){const t=this.imagesContainer.querySelector(`[data-url="${e.url}"]`);t.classList.add("loading");try{const t=await ImageUtils.bypassCORS(e.url),s=URL.createObjectURL(t);chrome.downloads.download({url:s,filename:e.filename,saveAs:!1},()=>{URL.revokeObjectURL(s)})}catch(e){console.error("Error downloading image:",e),alert("Failed to download image. Please try again.")}finally{t.classList.remove("loading")}}async downloadAllImages(){const e=Array.from(this.imagesContainer.getElementsByClassName("image-item")).filter(e=>"none"!==e.style.display).map(e=>{const{url:t}=e.querySelector(".download-button").dataset;return this.images.get(t)});if(0!==e.length){this.downloadAllButton.classList.add("loading");try{for(const t of e)await this.downloadImage(t)}finally{this.downloadAllButton.classList.remove("loading")}}else alert("No images to download")}}document.addEventListener("DOMContentLoaded",()=>{new e})})();